{"version":3,"sources":["../src/utils/cn.ts","../src/components/dialog.tsx","../src/components/data-table.tsx","../src/components/chart.tsx"],"names":["jsxs","jsx","React2"],"mappings":"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","file":"chunk-Y34N6R6U.js","sourcesContent":["import { clsx, type ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n","'use client';\n\nimport * as React from 'react';\nimport * as DialogPrimitive from '@radix-ui/react-dialog';\nimport { X } from 'lucide-react';\n\nimport { cn } from '../utils';\n\nconst Dialog = DialogPrimitive.Root;\n\nconst DialogTrigger = DialogPrimitive.Trigger;\n\nconst DialogPortal = DialogPrimitive.Portal;\n\nconst DialogClose = DialogPrimitive.Close;\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      'fixed inset-0 z-50 bg-black/10 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0',\n      className\n    )}\n    {...props}\n  />\n));\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName;\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        'fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%]',\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n));\nDialogContent.displayName = DialogPrimitive.Content.displayName;\n\nconst DialogHeader = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (\n  <div className={cn('flex flex-col space-y-1.5 text-center sm:text-left', className)} {...props} />\n);\nDialogHeader.displayName = 'DialogHeader';\n\nconst DialogFooter = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn('flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2', className)}\n    {...props}\n  />\n);\nDialogFooter.displayName = 'DialogFooter';\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn('text-lg font-semibold leading-none tracking-tight', className)}\n    {...props}\n  />\n));\nDialogTitle.displayName = DialogPrimitive.Title.displayName;\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn('text-sm text-muted-foreground', className)}\n    {...props}\n  />\n));\nDialogDescription.displayName = DialogPrimitive.Description.displayName;\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n};\n","'use client';\n\nimport * as React from 'react';\nimport { cn } from '../utils';\n\nexport interface DataTableProps {\n  data: Record<string, unknown>[];\n  columns?: string[];\n  className?: string;\n  maxRows?: number;\n}\n\nexport const DataTable: React.FC<DataTableProps> = ({\n  data,\n  columns,\n  className,\n  maxRows = 100\n}) => {\n  const displayData = maxRows ? data.slice(0, maxRows) : data;\n  \n  // Auto-detect columns if not provided\n  const tableColumns = columns || (data.length > 0 ? Object.keys(data[0]) : []);\n\n  return (\n    <div className={cn('overflow-auto border rounded-md', className)}>\n      <table className=\"w-full text-sm\">\n        <thead className=\"bg-muted\">\n          <tr>\n            {tableColumns.map((column) => (\n              <th key={column} className=\"px-4 py-2 text-left font-medium\">\n                {column}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {displayData.map((row, index) => (\n            <tr key={index} className=\"border-t\">\n              {tableColumns.map((column) => (\n                <td key={column} className=\"px-4 py-2\">\n                  {String(row[column] || '')}\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      {maxRows && data.length > maxRows && (\n        <div className=\"px-4 py-2 text-sm text-muted-foreground bg-muted\">\n          Showing {maxRows} of {data.length} rows\n        </div>\n      )}\n    </div>\n  );\n};\n","'use client';\n\nimport * as React from 'react';\nimport { cn } from '../utils';\n\nexport interface ChartData {\n  labels: string[];\n  datasets: {\n    label: string;\n    data: number[];\n    backgroundColor?: string;\n    borderColor?: string;\n  }[];\n}\n\nexport interface ChartProps {\n  data: ChartData;\n  type: 'bar' | 'line' | 'scatter';\n  title?: string;\n  className?: string;\n  width?: number;\n  height?: number;\n}\n\nexport const Chart: React.FC<ChartProps> = ({\n  data,\n  type,\n  title,\n  className,\n  width = 400,\n  height = 300\n}) => {\n  const canvasRef = React.useRef<HTMLCanvasElement>(null);\n\n  React.useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    // Clear canvas\n    ctx.clearRect(0, 0, width, height);\n\n    // Simple chart rendering (in a real implementation, you'd use a charting library)\n    const padding = 40;\n    const chartWidth = width - padding * 2;\n    const chartHeight = height - padding * 2;\n\n    // Draw axes\n    ctx.strokeStyle = '#666';\n    ctx.lineWidth = 1;\n    ctx.beginPath();\n    ctx.moveTo(padding, padding);\n    ctx.lineTo(padding, height - padding);\n    ctx.lineTo(width - padding, height - padding);\n    ctx.stroke();\n\n    // Draw data (simplified bar chart)\n    if (type === 'bar' && data.datasets.length > 0) {\n      const dataset = data.datasets[0];\n      const barWidth = chartWidth / data.labels.length;\n      const maxValue = Math.max(...dataset.data);\n\n      dataset.data.forEach((value, index) => {\n        const barHeight = (value / maxValue) * chartHeight;\n        const x = padding + index * barWidth;\n        const y = height - padding - barHeight;\n\n        ctx.fillStyle = dataset.backgroundColor || '#3b82f6';\n        ctx.fillRect(x + 2, y, barWidth - 4, barHeight);\n      });\n    }\n\n    // Draw labels\n    ctx.fillStyle = '#333';\n    ctx.font = '12px sans-serif';\n    ctx.textAlign = 'center';\n    data.labels.forEach((label, index) => {\n      const x = padding + index * (chartWidth / data.labels.length) + (chartWidth / data.labels.length) / 2;\n      ctx.fillText(label, x, height - padding + 20);\n    });\n\n  }, [data, type, width, height]);\n\n  return (\n    <div className={cn('flex flex-col items-center', className)}>\n      {title && (\n        <h3 className=\"text-lg font-semibold mb-4\">{title}</h3>\n      )}\n      <canvas\n        ref={canvasRef}\n        width={width}\n        height={height}\n        className=\"border rounded\"\n      />\n    </div>\n  );\n};\n"]}