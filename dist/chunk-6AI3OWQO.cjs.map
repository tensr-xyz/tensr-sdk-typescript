{"version":3,"sources":["../src/utils/cn.ts","../src/components/dialog.tsx","../src/components/data-table.tsx","../src/components/chart.tsx"],"names":["twMerge","clsx","DialogPrimitive","React","jsx","jsxs","X","React2"],"mappings":"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","file":"chunk-6AI3OWQO.cjs","sourcesContent":["import { clsx, type ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n","'use client';\n\nimport * as React from 'react';\nimport * as DialogPrimitive from '@radix-ui/react-dialog';\nimport { X } from 'lucide-react';\n\nimport { cn } from '../utils';\n\nconst Dialog = DialogPrimitive.Root;\n\nconst DialogTrigger = DialogPrimitive.Trigger;\n\nconst DialogPortal = DialogPrimitive.Portal;\n\nconst DialogClose = DialogPrimitive.Close;\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      'fixed inset-0 z-50 bg-black/10 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0',\n      className\n    )}\n    {...props}\n  />\n));\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName;\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        'fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%]',\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n));\nDialogContent.displayName = DialogPrimitive.Content.displayName;\n\nconst DialogHeader = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (\n  <div className={cn('flex flex-col space-y-1.5 text-center sm:text-left', className)} {...props} />\n);\nDialogHeader.displayName = 'DialogHeader';\n\nconst DialogFooter = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn('flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2', className)}\n    {...props}\n  />\n);\nDialogFooter.displayName = 'DialogFooter';\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn('text-lg font-semibold leading-none tracking-tight', className)}\n    {...props}\n  />\n));\nDialogTitle.displayName = DialogPrimitive.Title.displayName;\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn('text-sm text-muted-foreground', className)}\n    {...props}\n  />\n));\nDialogDescription.displayName = DialogPrimitive.Description.displayName;\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n};\n","'use client';\n\nimport * as React from 'react';\nimport { cn } from '../utils';\n\nexport interface DataTableProps {\n  data: Record<string, unknown>[];\n  columns?: string[];\n  className?: string;\n  maxRows?: number;\n}\n\nexport const DataTable: React.FC<DataTableProps> = ({\n  data,\n  columns,\n  className,\n  maxRows = 100\n}) => {\n  const displayData = maxRows ? data.slice(0, maxRows) : data;\n  \n  // Auto-detect columns if not provided\n  const tableColumns = columns || (data.length > 0 ? Object.keys(data[0]) : []);\n\n  return (\n    <div className={cn('overflow-auto border rounded-md', className)}>\n      <table className=\"w-full text-sm\">\n        <thead className=\"bg-muted\">\n          <tr>\n            {tableColumns.map((column) => (\n              <th key={column} className=\"px-4 py-2 text-left font-medium\">\n                {column}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {displayData.map((row, index) => (\n            <tr key={index} className=\"border-t\">\n              {tableColumns.map((column) => (\n                <td key={column} className=\"px-4 py-2\">\n                  {String(row[column] || '')}\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      {maxRows && data.length > maxRows && (\n        <div className=\"px-4 py-2 text-sm text-muted-foreground bg-muted\">\n          Showing {maxRows} of {data.length} rows\n        </div>\n      )}\n    </div>\n  );\n};\n","'use client';\n\nimport * as React from 'react';\nimport { cn } from '../utils';\n\nexport interface ChartData {\n  labels: string[];\n  datasets: {\n    label: string;\n    data: number[];\n    backgroundColor?: string;\n    borderColor?: string;\n  }[];\n}\n\nexport interface ChartProps {\n  data: ChartData;\n  type: 'bar' | 'line' | 'scatter';\n  title?: string;\n  className?: string;\n  width?: number;\n  height?: number;\n}\n\nexport const Chart: React.FC<ChartProps> = ({\n  data,\n  type,\n  title,\n  className,\n  width = 400,\n  height = 300\n}) => {\n  const canvasRef = React.useRef<HTMLCanvasElement>(null);\n\n  React.useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    // Clear canvas\n    ctx.clearRect(0, 0, width, height);\n\n    // Simple chart rendering (in a real implementation, you'd use a charting library)\n    const padding = 40;\n    const chartWidth = width - padding * 2;\n    const chartHeight = height - padding * 2;\n\n    // Draw axes\n    ctx.strokeStyle = '#666';\n    ctx.lineWidth = 1;\n    ctx.beginPath();\n    ctx.moveTo(padding, padding);\n    ctx.lineTo(padding, height - padding);\n    ctx.lineTo(width - padding, height - padding);\n    ctx.stroke();\n\n    // Draw data (simplified bar chart)\n    if (type === 'bar' && data.datasets.length > 0) {\n      const dataset = data.datasets[0];\n      const barWidth = chartWidth / data.labels.length;\n      const maxValue = Math.max(...dataset.data);\n\n      dataset.data.forEach((value, index) => {\n        const barHeight = (value / maxValue) * chartHeight;\n        const x = padding + index * barWidth;\n        const y = height - padding - barHeight;\n\n        ctx.fillStyle = dataset.backgroundColor || '#3b82f6';\n        ctx.fillRect(x + 2, y, barWidth - 4, barHeight);\n      });\n    }\n\n    // Draw labels\n    ctx.fillStyle = '#333';\n    ctx.font = '12px sans-serif';\n    ctx.textAlign = 'center';\n    data.labels.forEach((label, index) => {\n      const x = padding + index * (chartWidth / data.labels.length) + (chartWidth / data.labels.length) / 2;\n      ctx.fillText(label, x, height - padding + 20);\n    });\n\n  }, [data, type, width, height]);\n\n  return (\n    <div className={cn('flex flex-col items-center', className)}>\n      {title && (\n        <h3 className=\"text-lg font-semibold mb-4\">{title}</h3>\n      )}\n      <canvas\n        ref={canvasRef}\n        width={width}\n        height={height}\n        className=\"border rounded\"\n      />\n    </div>\n  );\n};\n"]}